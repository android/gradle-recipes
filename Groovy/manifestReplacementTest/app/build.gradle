plugins {
    id 'com.android.application'
}

import org.gradle.api.DefaultTask
import org.gradle.api.file.RegularFileProperty
import org.gradle.api.tasks.OutputFile
import org.gradle.api.tasks.TaskAction

abstract class GitVersionTask extends DefaultTask {

    @OutputFile
    abstract RegularFileProperty getGitVersionOutputFile()

    @TaskAction
    void taskAction() {
        // this would be the code to get the tip of tree version,
        // String gitVersion = "git rev-parse --short HEAD".execute().text.trim()
        // if (gitVersion.isEmpty()) {
        //    gitVersion="12"
        //}
        getGitVersionOutputFile().get().asFile.write("1234")
    }
}


import org.gradle.api.DefaultTask
import org.gradle.api.file.RegularFileProperty
import org.gradle.api.tasks.InputFile
import org.gradle.api.tasks.OutputFile
import org.gradle.api.tasks.TaskAction

abstract class ManifestProducerTask extends DefaultTask {
    @InputFile
    abstract RegularFileProperty getGitInfoFile()

    @OutputFile
    abstract RegularFileProperty getOutputManifest()

    @TaskAction
    void taskAction() {
        String manifest = """<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android"
            package="com.android.build.example.minimal"
            android:versionName="${new String(getGitInfoFile().get().asFile.readBytes())}"
            android:versionCode="1" >

            <application android:label="Minimal">
                <activity android:name="MainActivity">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
            """
        println("Writes to " + getOutputManifest().get().getAsFile().getAbsolutePath())
        getOutputManifest().get().getAsFile().write(manifest)
    }
}


import com.android.build.api.artifact.ArtifactType

android {
    
    compileSdkVersion(29)
    defaultConfig {
        minSdkVersion(21)
        targetSdkVersion(29)
    }

    onVariantProperties {
        TaskProvider gitVersionProvider = tasks.register(it.getName() + 'GitVersionProvider', GitVersionTask) {
            task ->
                task.gitVersionOutputFile.set(
                    new File(project.buildDir, "intermediates/gitVersionProvider/output")
                )
                task.outputs.upToDateWhen { false }
        }

        TaskProvider manifestProducer = tasks.register(it.getName() + 'ManifestProducer', ManifestProducerTask) {
            task ->
                task.gitInfoFile.set(gitVersionProvider.flatMap { it.getGitVersionOutputFile() })
                task.outputManifest.set(
                    new File(project.buildDir, "intermediates/" + getName() + "ManifestProducer/output")
                )
        }
        it.artifacts.use(manifestProducer)
            .wiredWith({ it.outputManifest })
            .toCreate(ArtifactType.MERGED_MANIFEST.INSTANCE)
    }
}